---
apiVersion: v1
kind: Service
metadata:
  name: minio-hsvc
  namespace: minions
spec:
  clusterIP: None
  selector:
    app: minio-db
  ports:
    - port: 9000
      targetPort: 9000
      name: svc-port
    - port: 9090
      targetPort: 9090
      name: con-port

---
apiVersion: v1
kind: Service
metadata:
  name: minio-svc
  labels:
    name: minio-svc
    app: minio
  namespace: minions
spec:
  type: ClusterIP
  selector:
    app: minio-db
  ports:
  - name: svc-port-svc
    port: 9000
    targetPort: 9000
  - name: con-port-svc
    port: 9090
    targetPort: 9090

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio-sts
  labels:
    name: minio-sts
  namespace: minions
spec:
  serviceName: minio-hsvc
  replicas: 4
  selector:
    matchLabels:
      app: minio-db
  volumeClaimTemplates:
  - metadata:
      name: mino-pvc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: do-block-storage-xfs
      resources:
        requests:
          storage: 1Gi
  template:
    metadata:
      name: minio-db
      labels:
        app: minio-db
    spec:
      initContainers:
      - name: minio-init-c
        image: busybox
        command:
        - /bin/sh
        - -c
        - "chown 1001 /data"
        volumeMounts:
        - mountPath: "/data"
          name: mino-pvc
      containers:
      - name: minio-db
        image: bitnami/minio:latest
        imagePullPolicy: IfNotPresent
        command:
        - minio
        - server
        - --address=:9000
        - --console-address=:9090
        - http://minio-sts-{0...3}.minio-hsvc.minions.svc.cluster.local/data
        envFrom:
        - secretRef:
            name: minio-secret
        ports:
        - containerPort: 9000
        - containerPort: 9090
        volumeMounts:
        - mountPath: /data
          name: mino-pvc
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /minio/health/live
            port: 9000
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /minio/health/ready
            port: 9000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-ing
  labels:
    name: minio-ing
    app: minio-db
  namespace: minions
spec:
  ingressClassName: nginx
  rules:
  - host: data-146.190.195.82.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio-svc
            port:
              name: svc-port-svc
  - host: console-146.190.195.82.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio-svc
            port:
              name: con-port-svc